<pre class='metadata'>
Title: CSS Sticky Scrollbars
Shortname: css-sticky-scrollbars
Level: 1
Status: UD
Group: CSSWG
Work Status: abandoned
ED: http://tabatkins.github.io/css-sticky-scrollbars/
Editor: Tab Atkins, Google, http://xanthir.com/contact
Abstract: Scrollbars that "stick" to an edge!
Warning: replaced by https://drafts.csswg.org/css-scroll-snap/
</pre>

<pre class=link-defaults>
spec: css-scroll-snap; type: dfn;
	text: scroll snap area
	text: snap
</pre>

This Spec Has Been Superseded {#intro}
======================================

This spec has been superseded by other CSS technology.
In particular, to implement a chatroom
that "sticks" the scrollbar to the bottom of the scroller when you're near the bottom,
staying there if you add new messages to the bottom,
but not messing with your scroll position when you're scrolled elsewhere in the history,
just use [[css-scroll-snap-1]]:

<pre highlight=css>
.message-container {
  scroll-snap-type: proximity;
}
.message-container::after {
  content: "";
  height: 0;
  overflow: hidden;
  display: block;
  scroll-snap-align: end;
}
</pre>

This creates a single <a>scroll snap area</a> in the message container,
aligned with the very bottom of the container.
If you scroll "near" the bottom, you'll <a>snap</a> to it;
if you add more content to the message container
(thus pushing the ::after further down),
it'll automatically re-snap to it
(because <a>scroll containers</a> have to re-snap to the same <a>scroll snap area</a> if it still exists);
if you are scrolled somewhere else in the history,
it won't do anything at all.

The use-case of "stable scrolling",
where you want "whatever you're currently looking at" to stay on the screen
when things are added/removed/resized higher up in the scroll container,
is handled by the <a href="https://skobes.github.io/ScrollAnchoring/">Scroll Anchoring</a> proposal
currently making its way thru the standards process.
